@model SchoolBookMVC.ViewModels.HomeWorkParameters

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/Site.css" rel="stylesheet" />
    <title>AddParameterValues</title>
</head>
<body>
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        <div class="box">
            <div class="form-horizontal">
                <h4>HomeWorkParameters</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.NoOfTerms, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NoOfTerms, new { htmlAttributes = new { @class = "textParam" } })
                        @Html.ValidationMessageFor(model => model.NoOfTerms, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NoOfLawsInUse, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NoOfLawsInUse, new { htmlAttributes = new { @class = "textParam" } })
                        @Html.ValidationMessageFor(model => model.NoOfLawsInUse, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HighestNumber, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HighestNumber, new { htmlAttributes = new { @class = "textParam" } })
                        @Html.ValidationMessageFor(model => model.HighestNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HighestNumberPow, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HighestNumberPow, new { htmlAttributes = new { @class = "textParam" } })
                        @Html.ValidationMessageFor(model => model.HighestNumberPow, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ComplexityID, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ComplexityID, new { htmlAttributes = new { @class = "textParam" } })
                        @Html.ValidationMessageFor(model => model.ComplexityID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ArithOrGeom, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ArithOrGeom, new { htmlAttributes = new { @class = "textParam" } })
                        @Html.ValidationMessageFor(model => model.ArithOrGeom, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Highest_a, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Highest_a, new { htmlAttributes = new { @class = "textParam" } })
                        @Html.ValidationMessageFor(model => model.Highest_a, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Highest_n, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Highest_n, new { htmlAttributes = new { @class = "textParam" } })
                        @Html.ValidationMessageFor(model => model.Highest_n, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Highest_d, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Highest_d, new { htmlAttributes = new { @class = "textParam" } })
                        @Html.ValidationMessageFor(model => model.Highest_d, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Highest_r, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Highest_r, new { htmlAttributes = new { @class = "textParam" } })
                        @Html.ValidationMessageFor(model => model.Highest_r, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DegreeOfRemoval, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DegreeOfRemoval, new { htmlAttributes = new { @class = "textParam" } })
                        @Html.ValidationMessageFor(model => model.DegreeOfRemoval, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MaxSides, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MaxSides, new { htmlAttributes = new { @class = "textParam" } })
                        @Html.ValidationMessageFor(model => model.MaxSides, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AngleOrSide, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AngleOrSide, new { htmlAttributes = new { @class = "textParam" } })
                        @Html.ValidationMessageFor(model => model.AngleOrSide, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div style="position:fixed;bottom:0px;left:0px;width:100%;background-color:slategray">
                    <input type="submit" class="button" value="Submit" />
                </div>
            </div>
        </div>
    }
    <br/>
</body>
</html>
